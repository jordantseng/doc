"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[694],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),f=a,d=p["".concat(c,".").concat(f)]||p[f]||m[f]||o;return t?n.createElement(d,i(i({ref:r},s),{},{components:t})):n.createElement(d,i({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4878:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(7462),a=(t(7294),t(3905));const o={},i="Merge Sort",l={unversionedId:"\u6f14\u7b97\u6cd5/merge-sort",id:"\u6f14\u7b97\u6cd5/merge-sort",title:"Merge Sort",description:"\u4f7f\u7528\u5206\u6cbb\u7b56\u7565\uff08Divide and Conquer\uff09\u4f86\u8655\u7406\u6392\u5e8f\u554f\u984c\u3002\u9019\u7a2e\u7b97\u6cd5\u5c07\u4e00\u500b\u5927\u7684\u554f\u984c\u62c6\u5206\u6210\u591a\u500b\u5c0f\u554f\u984c\uff0c\u7136\u5f8c\u5408\u4f75\u9019\u4e9b\u5c0f\u554f\u984c\u7684\u89e3\u7b54\uff0c\u6700\u7d42\u5f97\u5230\u6574\u500b\u554f\u984c\u7684\u89e3\u7b54\u3002",source:"@site/docs/\u6f14\u7b97\u6cd5/merge-sort.md",sourceDirName:"\u6f14\u7b97\u6cd5",slug:"/\u6f14\u7b97\u6cd5/merge-sort",permalink:"/frontendwiz/\u6f14\u7b97\u6cd5/merge-sort",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u6f14\u7b97\u6cd5/merge-sort.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Insertion Sort",permalink:"/frontendwiz/\u6f14\u7b97\u6cd5/insertion-sort"},next:{title:"Quick Sort",permalink:"/frontendwiz/\u6f14\u7b97\u6cd5/quick-sort"}},c={},u=[{value:"Merge Sort \u6b65\u9a5f:",id:"merge-sort-\u6b65\u9a5f",level:3},{value:"Big O",id:"big-o",level:3},{value:"\u5be6\u4f5c I",id:"\u5be6\u4f5c-i",level:3}],s={toc:u},p="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"merge-sort"},"Merge Sort"),(0,a.kt)("p",null,"\u4f7f\u7528\u5206\u6cbb\u7b56\u7565\uff08Divide and Conquer\uff09\u4f86\u8655\u7406\u6392\u5e8f\u554f\u984c\u3002\u9019\u7a2e\u7b97\u6cd5\u5c07\u4e00\u500b\u5927\u7684\u554f\u984c\u62c6\u5206\u6210\u591a\u500b\u5c0f\u554f\u984c\uff0c\u7136\u5f8c\u5408\u4f75\u9019\u4e9b\u5c0f\u554f\u984c\u7684\u89e3\u7b54\uff0c\u6700\u7d42\u5f97\u5230\u6574\u500b\u554f\u984c\u7684\u89e3\u7b54\u3002"),(0,a.kt)("h3",{id:"merge-sort-\u6b65\u9a5f"},"Merge Sort \u6b65\u9a5f:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u5206\u5272 (Divide): \u5c07\u5f85\u6392\u5e8f\u7684\u6578\u7d44\u5206\u6210\u5169\u500b\u76f8\u7b49\u5927\u5c0f\uff08\u6216\u8fd1\u4f3c\u76f8\u7b49\uff09\u7684\u5b50\u6578\u7d44\uff0c\u9019\u4e00\u904e\u7a0b\u6301\u7e8c\u905e\u8ff4\uff0c\u76f4\u5230\u6bcf\u500b\u5b50\u6578\u7d44\u53ea\u5305\u542b\u4e00\u500b\u5143\u7d20\uff0c\u6b64\u6642\u6bcf\u500b\u5b50\u6578\u7d44\u90fd\u53ef\u4ee5\u8996\u70ba\u5df2\u6392\u5e8f\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u5408\u4f75 (Conquer): \u5c07\u9019\u4e9b\u5df2\u6392\u5e8f\u7684\u5b50\u6578\u7d44\u5408\u4f75\u6210\u4e00\u500b\u5927\u7684\u6709\u5e8f\u6578\u7d44\u3002\u5728\u5408\u4f75\u7684\u904e\u7a0b\u4e2d\uff0c\u6bd4\u8f03\u5169\u500b\u5b50\u6578\u7d44\u7684\u5143\u7d20\uff0c\u6309\u7167\u9806\u5e8f\u5408\u4f75\u5b83\u5011\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u90fd\u88ab\u5408\u4f75\u5230\u4e00\u500b\u5927\u6578\u7d44\u4e2d\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u905e\u8ff4 (Recursion): \u9019\u500b\u5206\u5272\u548c\u5408\u4f75\u7684\u904e\u7a0b\u662f\u905e\u8ff4\u7684\uff0c\u901a\u904e\u4e0d\u65b7\u5c07\u554f\u984c\u5206\u89e3\u70ba\u66f4\u5c0f\u7684\u5b50\u554f\u984c\uff0c\u4e26\u5408\u4f75\u5b50\u554f\u984c\u7684\u89e3\u7b54\uff0c\u6700\u7d42\u5f97\u5230\u6574\u500b\u554f\u984c\u7684\u89e3\u7b54\u3002"))),(0,a.kt)("h3",{id:"big-o"},"Big O"),(0,a.kt)("p",null,"Time: ",(0,a.kt)("inlineCode",{parentName:"p"},"O(nlogn)")),(0,a.kt)("p",null,"Space: ",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("h3",{id:"\u5be6\u4f5c-i"},"\u5be6\u4f5c I"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function mergeSort(array) {\n  if (array.length <= 1) {\n    return array;\n  }\n\n  const mid = Math.floor(array.length / 2);\n  const left = mergeSort(array.slice(0, mid));\n  const right = mergeSort(array.slice(mid));\n\n  return merge(left, right);\n}\n\nfunction merge(array1, array2) {\n  let i = 0;\n  let j = 0;\n  const result = [];\n\n  while (i < array1.length && j < array2.length) {\n    if (array1[i] < array2[j]) {\n      result.push(array1[i]);\n      i += 1;\n    } else {\n      result.push(array2[j]);\n      j += 1;\n    }\n  }\n\n  if (i !== array1.length) {\n    result.push(...array1.slice(i));\n  }\n\n  if (j !== array2.length) {\n    result.push(...array2.slice(j));\n  }\n\n  return result;\n}\n")))}m.isMDXComponent=!0}}]);