"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[892],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),u=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s=function(e){var n=u(e.components);return t.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return r?t.createElement(m,l(l({ref:n},s),{},{components:r})):t.createElement(m,l({ref:n},s))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[p]="string"==typeof e?e:a,l[1]=c;for(var u=2;u<o;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5178:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var t=r(7462),a=(r(7294),r(3905));const o={},l="Binary Tree",c={unversionedId:"\u8cc7\u6599\u7d50\u69cb/binary-tree",id:"\u8cc7\u6599\u7d50\u69cb/binary-tree",title:"Binary Tree",description:"\u4ec0\u9ebc\u662f Binary Tree",source:"@site/docs/\u8cc7\u6599\u7d50\u69cb/binary-tree.md",sourceDirName:"\u8cc7\u6599\u7d50\u69cb",slug:"/\u8cc7\u6599\u7d50\u69cb/binary-tree",permalink:"/frontendwiz/en/\u8cc7\u6599\u7d50\u69cb/binary-tree",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8cc7\u6599\u7d50\u69cb/binary-tree.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"XSS",permalink:"/frontendwiz/en/\u7db2\u8def\u5b89\u5168/xss"},next:{title:"Graph",permalink:"/frontendwiz/en/\u8cc7\u6599\u7d50\u69cb/graph/"}},i={},u=[{value:"\u4ec0\u9ebc\u662f Binary Tree",id:"\u4ec0\u9ebc\u662f-binary-tree",level:3},{value:"\u5e38\u7528\u7528\u8a9e",id:"\u5e38\u7528\u7528\u8a9e",level:3},{value:"\u57fa\u672c\u904d\u6b77\u65b9\u6cd5",id:"\u57fa\u672c\u904d\u6b77\u65b9\u6cd5",level:3}],s={toc:u},p="wrapper";function d(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"binary-tree"},"Binary Tree"),(0,a.kt)("h3",{id:"\u4ec0\u9ebc\u662f-binary-tree"},"\u4ec0\u9ebc\u662f Binary Tree"),(0,a.kt)("p",null,"Binary Tree \u662f\u4e00\u7a2e\u8cc7\u6599\u7d50\u69cb\uff0c\u4e2d\u6587\u7a31\u70ba\u4e8c\u5143\u6a39\uff0c\u7531\u4e00\u9023\u4e32\u7684\u7bc0\u9ede\u7d44\u6210\u7684\u6a39\uff0c\u6bcf\u4e00\u500b\u7bc0\u9ede\u6700\u591a\u53ea\u6703\u6709\u5169\u500b\u5b50\u7bc0\u9ede\uff1a\u5de6\u7bc0\u9ede\u3001\u53f3\u7bc0\u9ede\u3002\u6bcf\u4e00\u500b\u7bc0\u9ede\u5305\u542b\u4e86",(0,a.kt)("strong",{parentName:"p"},"\u8cc7\u6599"),"\u4ee5\u53ca",(0,a.kt)("strong",{parentName:"p"},"\u5de6\u53f3\u5169\u500b\u5b50\u7bc0\u9ede\u7684\u53c2\u8003"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"class Node {\n  constructor(val) {\n    this.val = val;\n    this.left = null;\n    this.right = null;\n  }\n}\n\nconst a = new Node('a');\nconst b = new Node('b');\nconst c = new Node('c');\nconst d = new Node('d');\nconst e = new Node('e');\n\na.left = b;\na.right = c;\nb.left = d;\nb.right = e;\n\n//      a\n//    /   \\\n//   b     c\n//  / \\\n// d   e\n")),(0,a.kt)("h3",{id:"\u5e38\u7528\u7528\u8a9e"},"\u5e38\u7528\u7528\u8a9e"),(0,a.kt)("p",null,"\u5728 Binary Tree \u4e2d\uff0c\u6839\u7bc0\u9ede\u7d93\u5e38\u7a31\u70ba ",(0,a.kt)("inlineCode",{parentName:"p"},"root"),"\uff0c\u9023\u63a5\u7bc0\u9ede\u8207\u7bc0\u9ede\u7684\u8def\u5f91\u7a31\u70ba ",(0,a.kt)("inlineCode",{parentName:"p"},"edge"),"\uff0c\u800c\u7576\u7bc0\u9ede\u6c92\u6709\u5b50\u7bc0\u9ede\u6642\u5247\u7a31\u70ba ",(0,a.kt)("inlineCode",{parentName:"p"},"leaf"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"//      a    <- root\n//    /   \\  <- edge\n//   b     c <- edge\n//  / \\\n// d   e\n")),(0,a.kt)("h3",{id:"\u57fa\u672c\u904d\u6b77\u65b9\u6cd5"},"\u57fa\u672c\u904d\u6b77\u65b9\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"DFS Traversal")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// iterative\n// Time: O(n)\n// Space: O(n)\nfunction traverse(root) {\n  const stack = [root];\n\n  while (stack.length > 0) {\n    const current = stack.pop();\n\n    console.log(current.val);\n\n    if (current.right !== null) {\n      stack.push(current.right);\n    }\n\n    if (current.left !== null) {\n      stack.push(current.left);\n    }\n  }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// recursive\n// Time: O(n)\n// Space: O(n)\nfunction traverse(root) {\n  if (root === null) {\n    return;\n  }\n\n  console.log(root.val);\n\n  traverse(root.left);\n\n  traverse(root.right);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"BFS Traversal")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// Time: O(n)\n// Space: O(n)\nfunction traverse(root) {\n  const queue = [root];\n\n  while (queue.length > 0) {\n    const current = queue.shift();\n\n    console.log(current.val);\n\n    if (current.left !== null) {\n      queue.push(current.left);\n    }\n\n    if (current.right !== null) {\n      queue.push(current.right);\n    }\n  }\n}\n")))}d.isMDXComponent=!0}}]);