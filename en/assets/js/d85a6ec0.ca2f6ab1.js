"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[300],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),h=a,f=u["".concat(i,".").concat(h)]||u[h]||d[h]||c;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=h;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<c;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const c={},o="Graph",l={unversionedId:"\u8cc7\u6599\u7d50\u69cb/graph/index",id:"\u8cc7\u6599\u7d50\u69cb/graph/index",title:"Graph",description:"\u4ec0\u9ebc\u662f Graph",source:"@site/docs/\u8cc7\u6599\u7d50\u69cb/graph/index.md",sourceDirName:"\u8cc7\u6599\u7d50\u69cb/graph",slug:"/\u8cc7\u6599\u7d50\u69cb/graph/",permalink:"/frontendwiz/en/\u8cc7\u6599\u7d50\u69cb/graph/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8cc7\u6599\u7d50\u69cb/graph/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"XSS",permalink:"/frontendwiz/en/\u7db2\u8def\u5b89\u5168/xss"},next:{title:"Linked List",permalink:"/frontendwiz/en/\u8cc7\u6599\u7d50\u69cb/linked-list"}},i={},s=[{value:"\u4ec0\u9ebc\u662f Graph",id:"\u4ec0\u9ebc\u662f-graph",level:3},{value:"Directed Graph \u904d\u6b77\u6f14\u7b97\u6cd5",id:"directed-graph-\u904d\u6b77\u6f14\u7b97\u6cd5",level:3},{value:"DFS",id:"dfs",level:4},{value:"BFS",id:"bfs",level:4},{value:"Undirected Graph \u904d\u6b77\u6f14\u7b97\u6cd5",id:"undirected-graph-\u904d\u6b77\u6f14\u7b97\u6cd5",level:3},{value:"DFS",id:"dfs-1",level:4},{value:"BFS",id:"bfs-1",level:4}],p={toc:s},u="wrapper";function d(e){let{components:n,...c}=e;return(0,a.kt)(u,(0,r.Z)({},p,c,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graph"},"Graph"),(0,a.kt)("h3",{id:"\u4ec0\u9ebc\u662f-graph"},"\u4ec0\u9ebc\u662f Graph"),(0,a.kt)("p",null,"Graph \u662f\u4e00\u7a2e\u7531\u7bc0\u9ede\uff08node\uff09\u548c\u908a\uff08edge\uff09\u7d44\u6210\u7684\u8cc7\u6599\u7d50\u69cb\u3002"),(0,a.kt)("p",null,"\u53ef\u5206\u70ba\u6709\u65b9\u5411\u6027\uff08Directed Graph\uff09\u548c\u7121\u65b9\u5411\u6027\uff08Undirected Graph\uff09\u7684 graph\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"alt text",src:t(5333).Z,width:"1570",height:"1028"})),(0,a.kt)("p",null,"\u8868\u793a Graph \u7bc0\u9ede\u4e4b\u9593\u7684\u95dc\u4fc2\u6642\uff0c\u7d93\u5e38\u4f7f\u7528\u9130\u63a5\u8868\uff08Adjacency List\uff09\u8868\u793a\u7bc0\u9ede\u4e4b\u9593\u7684\u95dc\u4fc2\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const directedGraph = {\n  a: ['b', 'c'],\n  b: ['d'],\n  c: ['e'],\n  d: [],\n  e: ['b'],\n  f: ['d'],\n};\n\nconst undirectedGraph = {\n  a: ['b', 'c'],\n  b: ['a', 'e', 'd'],\n  c: ['a', 'e'],\n  d: ['b', 'f'],\n  e: ['b', 'c'],\n  f: ['d'],\n};\n")),(0,a.kt)("h3",{id:"directed-graph-\u904d\u6b77\u6f14\u7b97\u6cd5"},"Directed Graph \u904d\u6b77\u6f14\u7b97\u6cd5"),(0,a.kt)("h4",{id:"dfs"},"DFS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"e = # of edges"),(0,a.kt)("li",{parentName:"ul"},"n = # of nodes"),(0,a.kt)("li",{parentName:"ul"},"Time\uff1aO(e)"),(0,a.kt)("li",{parentName:"ul"},"Space\uff1a O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// iterative\nfunction dfs(graph, src) {\n  const stack = [src];\n  while (stack.length > 0) {\n    const current = stack.pop();\n    console.log(current);\n    for (const neighbor of graph[current]) {\n      stack.push(neighbor);\n    }\n  }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// recursive\nfunction dfs(graph, src) {\n  console.log(src);\n  for (const neighbor of graph[src]) {\n    dfs(graph, neighbor);\n  }\n}\n")),(0,a.kt)("h4",{id:"bfs"},"BFS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"e = # of edges"),(0,a.kt)("li",{parentName:"ul"},"n = # of nodes"),(0,a.kt)("li",{parentName:"ul"},"Time\uff1a O(e)"),(0,a.kt)("li",{parentName:"ul"},"Space\uff1a O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function bfs(graph, src) {\n  const queue = [src];\n  while (queue.length > 0) {\n    const current = queue.shift();\n    console.log(current);\n    for (const neighbor of graph[current]) {\n      queue.push(graph, neighbor);\n    }\n  }\n}\n")),(0,a.kt)("h3",{id:"undirected-graph-\u904d\u6b77\u6f14\u7b97\u6cd5"},"Undirected Graph \u904d\u6b77\u6f14\u7b97\u6cd5"),(0,a.kt)("h4",{id:"dfs-1"},"DFS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"e = # of edges"),(0,a.kt)("li",{parentName:"ul"},"n = # of nodes"),(0,a.kt)("li",{parentName:"ul"},"Time\uff1a O(e)"),(0,a.kt)("li",{parentName:"ul"},"Space\uff1a O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// iterative\nconst dfs = (graph, src) => {\n  const visited = new Set();\n  const stack = [src];\n  while (stack.length > 0) {\n    const current = stack.pop();\n    console.log(current);\n    visited.add(current);\n    for (const neighbor of graph[current]) {\n      if (!visited.has(neighbor)) stack.push(neighbor);\n    }\n  }\n};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// recursive\nfunction dfs(graph, src) {\n  const visited = new Set();\n  const findPath = (src) => {\n    if (visited.has(src)) return;\n    console.log(src);\n    visited.add(src);\n    for (const neighbor of graph[src]) {\n      findPath(neighbor);\n    }\n  };\n  return findPath(src);\n}\n")),(0,a.kt)("h4",{id:"bfs-1"},"BFS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"e = # of edges"),(0,a.kt)("li",{parentName:"ul"},"n = # of nodes"),(0,a.kt)("li",{parentName:"ul"},"Time\uff1a O(e)"),(0,a.kt)("li",{parentName:"ul"},"Space\uff1a O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const bfs = (graph, src) => {\n  const visited = new Set();\n  const queue = [src];\n  while (queue.length > 0) {\n    const current = queue.shift();\n    console.log(current);\n    visited.add(current);\n    for (const neighbor of graph[current]) {\n      if (!visited.has(neighbor)) queue.push(neighbor);\n    }\n  }\n};\n")),(0,a.kt)("p",null,"\u53c3\u8003\u4f86\u6e90\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://structy.net/"},"https://structy.net/"))))}d.isMDXComponent=!0},5333:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/Screenshot 2023-05-15 at 11.21.53 PM-6404a0372ab7f0a7cb1b30fbc525e8e9.png"}}]);