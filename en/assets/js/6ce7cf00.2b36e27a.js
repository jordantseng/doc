"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[18],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1406:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},i="Curry",u={unversionedId:"\u9762\u8a66\u624b\u5beb\u984c/curry",id:"\u9762\u8a66\u624b\u5beb\u984c/curry",title:"Curry",description:"What is currying",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/\u9762\u8a66\u624b\u5beb\u984c/curry.md",sourceDirName:"\u9762\u8a66\u624b\u5beb\u984c",slug:"/\u9762\u8a66\u624b\u5beb\u984c/curry",permalink:"/frontendwiz/en/\u9762\u8a66\u624b\u5beb\u984c/curry",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u9762\u8a66\u624b\u5beb\u984c/curry.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5be6\u4f5c call, apply, bind",permalink:"/frontendwiz/en/\u9762\u8a66\u624b\u5beb\u984c/call-apply-bind"},next:{title:"\u5be6\u4f5c Debounce",permalink:"/frontendwiz/en/\u9762\u8a66\u624b\u5beb\u984c/debounce"}},l={},c=[{value:"What is currying",id:"what-is-currying",level:3},{value:"Pratical Applications",id:"pratical-applications",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Approach",id:"approach",level:3},{value:"Implementation II",id:"implementation-ii",level:3}],s={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"curry"},"Curry"),(0,a.kt)("h3",{id:"what-is-currying"},"What is currying"),(0,a.kt)("p",null,"Currying is a powerful technique in functional programming that transforms a function with multiple arguments into a sequence of functions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function sum(a, b) {\n  return a + b;\n}\n\nconst curriedSum = curry(sum);\ncurriedSum(1)(2); // 3\ncurriedSum(1, 2); // 3\ncurriedSum()(1)(2); // 3\n")),(0,a.kt)("h3",{id:"pratical-applications"},"Pratical Applications"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. Reusable utility functions")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const add = (a) => (b) => a + b;\n\nconst add1 = add(1);\n\nconsole.log(add1(2)); // 3\nconsole.log(add1(3)); // 5\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Event handling")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const button = document.getElementById('button');\nconst handleButtonClick = (id) => (event) => console.log(`Button Id: ${id}, ${event}`);\n\nbutton.addEventListener('click', handleButtonClick(3));\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3. Customizing API calls")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const apiCall = (baseUrl) => (endPoint) => fetch(`${baseUrl}${endPoint}`);\nconst jsonPlaceholderApi = apiCall('https://jsonplaceholder.typicode.com');\nconst getUsers = jsonPlaceholderApi('/users');\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4. Functional composition")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const compose = (f, g) => (x) => f(g(x));\n\nconst double = (x) => x * 2;\nconst square = (x) => x * x;\n\nconst doubleThenSquare = compose(square, double);\nconsole.log(doubleThenSquare(3)); // 36\n")),(0,a.kt)("h3",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"Given a function ",(0,a.kt)("inlineCode",{parentName:"p"},"fn"),", return a curried version of that function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const fn = (a, b) => a + b;\nconst curriedFn = curry(fn);\n\ncurriedFn(1)(2); // 3\ncurriedFn(1, 2); // 3\ncurriedFn()(1)(2); // 3\n")),(0,a.kt)("h3",{id:"approach"},"Approach"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"curry")," function will return a new function called ",(0,a.kt)("inlineCode",{parentName:"li"},"curried"),", which takes any number of arguments."),(0,a.kt)("li",{parentName:"ol"},"Check if the number of arguments in ",(0,a.kt)("inlineCode",{parentName:"li"},"curried")," is greater than or equal to the number of arguments in the ",(0,a.kt)("inlineCode",{parentName:"li"},"fn")," function."),(0,a.kt)("li",{parentName:"ol"},"If it is, then call the ",(0,a.kt)("inlineCode",{parentName:"li"},"fn")," function and pass the arguments of curried to it."),(0,a.kt)("li",{parentName:"ol"},"If it is not, then return a new function that accepts other arguments and passes the arguments of curried along with them to the ",(0,a.kt)("inlineCode",{parentName:"li"},"curried")," function."),(0,a.kt)("li",{parentName:"ol"},"Recursively call the ",(0,a.kt)("inlineCode",{parentName:"li"},"curried")," function until the number of arguments is greater than or equal to the number of arguments in the ",(0,a.kt)("inlineCode",{parentName:"li"},"fn")," function, then return the final result.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function curry(fn) {\n  // return a new function called curried, which takes any number of arguments\n  return function curried(...args) {\n    // Check if the number of arguments in curried is greater than\n    // or equal to the number of arguments in the fn function\n    if (args.length >= fn.length) {\n      // If it is, then call the fn function and pass the arguments of curried to it\n      return fn.apply(this, args);\n    }\n\n    // If it is not, then return a new function that accepts other arguments\n    // and passes the arguments of curried along with them to the curried function\n    return function (...otherArgs) {\n      // Recursively call the curried function until the number of arguments is greater than\n      // or equal to the number of arguments in the fn function\n      return curried(...args, ...otherArgs);\n    };\n  };\n}\n")),(0,a.kt)("h3",{id:"implementation-ii"},"Implementation II"),(0,a.kt)("p",null,"Given a function ",(0,a.kt)("inlineCode",{parentName:"p"},"fn"),", return a curried version of that function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const sum = (...args) => args.reduce((acc, val) => acc + val, 0);\n\nconst curriedSum = curry(sum);\n\nconsole.log(curriedSum()); // 0\nconsole.log(curriedSum(1)()); // 1\nconsole.log(curriedSum(1)(2)()); // 3\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function curry(fn) {\n  return function curried(...args) {\n    if (args.length === 0) {\n      return fn.apply(this);\n    }\n\n    return (...otherArgs) => {\n      if (otherArgs.length === 0) {\n        return fn.apply(this, args);\n      }\n\n      return curried.apply(this, [...args, ...otherArgs]);\n    };\n  };\n}\n")),(0,a.kt)("p",null,"Reference\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://leetcode.com/problems/curry/description/"},"https://leetcode.com/problems/curry/description/"))))}m.isMDXComponent=!0}}]);